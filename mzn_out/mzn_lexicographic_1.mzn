include "minisearch.mzn";
var -2147483646.0..2147483646.0 : cost;
var bool:s1;
var bool:s2;
var bool:s3;
var bool:s4;
var -2147483646.0..2147483646.0 : q1;
var -2147483646.0..2147483646.0 : q2;
var -2147483646.0..2147483646.0 : q3;
var -2147483646.0..2147483646.0 : q4;
var -2147483646.0..2147483646.0 : unused_suppliers;
array[float] of var float: obj_array;
constraint (250.0 = (q1 + q2 + q3 + q4));
constraint ((q1 = 0.0) \/ ((50.0 <= q1) /\ (q1 <= 250.0)));
constraint ((q2 = 0.0) \/ ((100.0 <= q2) /\ (q2 <= 150.0)));
constraint ((q3 = 0.0) \/ ((100.0 <= q3) /\ (q3 <= 100.0)));
constraint ((q4 = 0.0) \/ ((50.0 <= q4) /\ (q4 <= 100.0)));
constraint ((s1 -> not((q1 = 0.0))) /\ (s2 -> (not(not( (q2 = 0.0))) /\ (s3 -> (not (q3 = 0.0))) /\ (s4 -> (not (q4 = 0.0))))));
var bool:unused_suppliers_0;
constraint (unused_suppliers_0=s1);
var bool:unused_suppliers_1;
constraint (unused_suppliers_1=s2);
var bool:unused_suppliers_2;
constraint (unused_suppliers_2=s3);
var bool:unused_suppliers_3;
constraint (unused_suppliers_3=s4);
constraint (unused_suppliers=not(unused_suppliers_3)*1+not(unused_suppliers_2)*1+not(unused_suppliers_1)*1+not(unused_suppliers_0)*1);
constraint ( 0 <= unused_suppliers /\ unused_suppliers <= (1+1+1+1));
var float: temp_1;
constraint (temp_1=((q1 * 23.0) + (q2 * 21.0) + (q3 * 20.0) + (q4 * 10.0)));
var float: temp_2;
constraint (temp_2=unused_suppliers);
constraint (temp_2<=4.0);
obj_array=[temp_1,temp_2];
%use minisearch
solve search minimize_lex(obj_array);
