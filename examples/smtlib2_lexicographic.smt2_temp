

( set-option :opt.priority lex )
( set-logic QF_LIA )
( declare-fun cost (  ) Real )
( declare-fun s1 (  ) Bool )
( declare-fun s2 (  ) Bool )
( declare-fun s3 (  ) Bool )
( declare-fun s4 (  ) Bool )
( declare-fun q1 (  ) Real )
( declare-fun q2 (  ) Real )
( declare-fun q3 (  ) Real )
( declare-fun q4 (  ) Real )

( assert ( = 250.0 ( + q1 q2 q3 q4 ) ) )

( assert ( or ( = q1 0.0 ) ( and ( <= 50.0 q1 ) ( <= q1 250.0 ) ) ) )
( assert ( or ( = q2 0.0 ) ( and ( <= 100.0 q2 ) ( <= q2 150.0 ) ) ) )
( assert ( or ( = q3 0.0 ) ( and ( <= 100.0 q3 ) ( <= q3 100.0 ) ) ) )
( assert ( or ( = q4 0.0 ) ( and ( <= 50.0 q4 ) ( <= q4 100.0 ) ) ) )

( assert ( and ( => s1 ( not ( = q1 0.0 ) ) ) ( => s2 ( not ( = q2 0.0 ) ) )
           ( => s3 ( not ( = q3 0.0 ) ) ) ( => s4 ( not ( = q4 0.0 ) ) ) ) )


;declaration of additional variable for assert-soft

( declare-fun unused_suppliers (  ) Real )
( assert-soft s1 :id unused_suppliers )
( assert-soft s2 :id unused_suppliers )
( assert-soft s3 :id unused_suppliers )
( assert-soft s4 :id unused_suppliers )

( minimize ( + ( * q1 23.0 ) ( * q2 21.0 ) ( * q3 20.0 ) ( * q4 10.0 ) ) )
( minimize unused_suppliers :lower 0.0 :upper 4.0 )


( check-sat )
( get-objectives )

( exit )
